// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Tokeniser > Lexer foundation > Escapes string literals 1`] = `
[
  {
    "col": 1,
    "line": 1,
    "lineBreaks": 0,
    "offset": 0,
    "text": "##teamcity",
    "toString": [Function],
    "type": "serviceMessageIdent",
    "value": "##teamcity",
  },
  {
    "col": 11,
    "line": 1,
    "lineBreaks": 0,
    "offset": 10,
    "text": "[",
    "toString": [Function],
    "type": "parametersOpen",
    "value": "[",
  },
  {
    "col": 12,
    "line": 1,
    "lineBreaks": 0,
    "offset": 11,
    "text": "testMessage",
    "toString": [Function],
    "type": "messageName",
    "value": "testMessage",
  },
  {
    "col": 23,
    "line": 1,
    "lineBreaks": 0,
    "offset": 22,
    "text": " ",
    "toString": [Function],
    "type": "space",
    "value": " ",
  },
  {
    "col": 24,
    "line": 1,
    "lineBreaks": 0,
    "offset": 23,
    "text": "attributeExample",
    "toString": [Function],
    "type": "propertyName",
    "value": "attributeExample",
  },
  {
    "col": 40,
    "line": 1,
    "lineBreaks": 0,
    "offset": 39,
    "text": "=",
    "toString": [Function],
    "type": "propertyAssignOperator",
    "value": "=",
  },
  {
    "col": 41,
    "line": 1,
    "lineBreaks": 0,
    "offset": 40,
    "text": "'",
    "toString": [Function],
    "type": "stringStart",
    "value": "'",
  },
  {
    "col": 42,
    "line": 1,
    "lineBreaks": 0,
    "offset": 41,
    "text": "|[",
    "toString": [Function],
    "type": "stringEscapeSingleChar",
    "value": "[",
  },
  {
    "col": 44,
    "line": 1,
    "lineBreaks": 0,
    "offset": 43,
    "text": "Diff",
    "toString": [Function],
    "type": "stringValue",
    "value": "Diff",
  },
  {
    "col": 48,
    "line": 1,
    "lineBreaks": 0,
    "offset": 47,
    "text": "|c",
    "toString": [Function],
    "type": "stringEscapeSingleChar",
    "value": "c",
  },
  {
    "col": 50,
    "line": 1,
    "lineBreaks": 0,
    "offset": 49,
    "text": "ult",
    "toString": [Function],
    "type": "stringValue",
    "value": "ult",
  },
  {
    "col": 53,
    "line": 1,
    "lineBreaks": 0,
    "offset": 52,
    "text": "|r",
    "toString": [Function],
    "type": "stringEscapeSingleChar",
    "value": "
",
  },
  {
    "col": 55,
    "line": 1,
    "lineBreaks": 0,
    "offset": 54,
    "text": "|n",
    "toString": [Function],
    "type": "stringEscapeSingleChar",
    "value": "
",
  },
  {
    "col": 57,
    "line": 1,
    "lineBreaks": 0,
    "offset": 56,
    "text": "mes",
    "toString": [Function],
    "type": "stringValue",
    "value": "mes",
  },
  {
    "col": 60,
    "line": 1,
    "lineBreaks": 0,
    "offset": 59,
    "text": "|'",
    "toString": [Function],
    "type": "stringEscapeSingleChar",
    "value": "'",
  },
  {
    "col": 62,
    "line": 1,
    "lineBreaks": 0,
    "offset": 61,
    "text": "sage ",
    "toString": [Function],
    "type": "stringValue",
    "value": "sage ",
  },
  {
    "col": 67,
    "line": 1,
    "lineBreaks": 0,
    "offset": 66,
    "text": "|0x0134",
    "toString": [Function],
    "type": "stringEscapeUnicode",
    "value": "Ä´",
  },
  {
    "col": 74,
    "line": 1,
    "lineBreaks": 0,
    "offset": 73,
    "text": "|]",
    "toString": [Function],
    "type": "stringEscapeSingleChar",
    "value": "]",
  },
  {
    "col": 76,
    "line": 1,
    "lineBreaks": 0,
    "offset": 75,
    "text": "'",
    "toString": [Function],
    "type": "stringEnd",
    "value": "'",
  },
  {
    "col": 77,
    "line": 1,
    "lineBreaks": 0,
    "offset": 76,
    "text": "]",
    "toString": [Function],
    "type": "parametersClose",
    "value": "]",
  },
]
`;

exports[`Tokeniser > Lexer foundation > Tokenises single attribute message 1`] = `
[
  {
    "col": 1,
    "line": 1,
    "lineBreaks": 0,
    "offset": 0,
    "text": "##teamcity",
    "toString": [Function],
    "type": "serviceMessageIdent",
    "value": "##teamcity",
  },
  {
    "col": 11,
    "line": 1,
    "lineBreaks": 0,
    "offset": 10,
    "text": "[",
    "toString": [Function],
    "type": "parametersOpen",
    "value": "[",
  },
  {
    "col": 12,
    "line": 1,
    "lineBreaks": 0,
    "offset": 11,
    "text": "testMessage",
    "toString": [Function],
    "type": "messageName",
    "value": "testMessage",
  },
  {
    "col": 23,
    "line": 1,
    "lineBreaks": 0,
    "offset": 22,
    "text": " ",
    "toString": [Function],
    "type": "space",
    "value": " ",
  },
  {
    "col": 24,
    "line": 1,
    "lineBreaks": 0,
    "offset": 23,
    "text": "attributeExample",
    "toString": [Function],
    "type": "propertyName",
    "value": "attributeExample",
  },
  {
    "col": 40,
    "line": 1,
    "lineBreaks": 0,
    "offset": 39,
    "text": "=",
    "toString": [Function],
    "type": "propertyAssignOperator",
    "value": "=",
  },
  {
    "col": 41,
    "line": 1,
    "lineBreaks": 0,
    "offset": 40,
    "text": "'",
    "toString": [Function],
    "type": "stringStart",
    "value": "'",
  },
  {
    "col": 42,
    "line": 1,
    "lineBreaks": 0,
    "offset": 41,
    "text": "hello",
    "toString": [Function],
    "type": "stringValue",
    "value": "hello",
  },
  {
    "col": 47,
    "line": 1,
    "lineBreaks": 0,
    "offset": 46,
    "text": "'",
    "toString": [Function],
    "type": "stringEnd",
    "value": "'",
  },
  {
    "col": 48,
    "line": 1,
    "lineBreaks": 0,
    "offset": 47,
    "text": "]",
    "toString": [Function],
    "type": "parametersClose",
    "value": "]",
  },
]
`;
